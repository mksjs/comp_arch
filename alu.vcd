$date
	Wed Nov 28 01:55:33 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 1 ! carry $end
$var wire 8 " out [7:0] $end
$var reg 8 # a [7:0] $end
$var reg 8 $ b [7:0] $end
$var reg 3 % op [2:0] $end
$scope module dut $end
$var wire 8 & a [7:0] $end
$var wire 8 ' b [7:0] $end
$var wire 3 ( op [2:0] $end
$var reg 1 ) carry $end
$var reg 8 * out [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx *
x)
bx (
bx '
bx &
bx %
bx $
bx #
bx "
x!
$end
#5
0)
0!
b10000 *
b10000 "
b0 %
b0 (
b1 $
b1 '
b1111 #
b1111 &
#10
b1110 *
b1110 "
b1 %
b1 (
#15
b1 *
b1 "
b10 %
b10 (
#20
b1111 *
b1111 "
b11 %
b11 (
#25
b11110000 *
b11110000 "
b100 %
b100 (
#30
